-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-21 22:20:36 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE czlowiek_kina (
    id             INTEGER NOT NULL,
    imiê           VARCHAR2(128 CHAR) NOT NULL,
    nazwisko       VARCHAR2(128 CHAR) NOT NULL,
    data_urodzenia DATE,
    opis           CLOB
);

ALTER TABLE czlowiek_kina ADD CONSTRAINT czlowiek_kina_pk PRIMARY KEY ( id );

CREATE TABLE film (
    id                      INTEGER NOT NULL,
    tytul_polski            VARCHAR2(512 CHAR),
    tytul_orginalny         VARCHAR2(512 CHAR) NOT NULL,
    data_œwiatowej_premiery DATE NOT NULL,
    data_polskiej_premeiry  DATE,
    czas_trwania            INTEGER,
    opis                    CLOB,
    czlowiek_kina_id        INTEGER NOT NULL
);

ALTER TABLE film ADD CONSTRAINT film_pk PRIMARY KEY ( id );

CREATE TABLE gatunek (
    id    INTEGER NOT NULL,
    nazwa VARCHAR2(256 CHAR) NOT NULL
);

ALTER TABLE gatunek ADD CONSTRAINT gatunek_pk PRIMARY KEY ( id );

CREATE TABLE ocena (
    id            INTEGER NOT NULL,
    ocena         INTEGER NOT NULL,
    uzasadnienie  CLOB,
    serial_id     INTEGER,
    film_id       INTEGER,
    uzytkownik_id INTEGER NOT NULL
);

ALTER TABLE ocena
    ADD CONSTRAINT arc_1 CHECK ( ( ( film_id IS NOT NULL )
                                   AND ( serial_id IS NULL ) )
                                 OR ( ( serial_id IS NOT NULL )
                                      AND ( film_id IS NULL ) ) );

ALTER TABLE ocena ADD CONSTRAINT ocena_pk PRIMARY KEY ( id );

CREATE TABLE odcinek (
    id              INTEGER NOT NULL,
    tytul_polski    VARCHAR2(512 CHAR),
    tytul_orginalny VARCHAR2(512 CHAR) NOT NULL,
    nr_odcinka      INTEGER NOT NULL,
    opis            CLOB,
    sezon_id        INTEGER NOT NULL
);

ALTER TABLE odcinek ADD CONSTRAINT odcinek_pk PRIMARY KEY ( id );

CREATE TABLE ranga (
    id            INTEGER NOT NULL,
    nazwa         VARCHAR2(256 CHAR) NOT NULL,
    uzytkownik_id INTEGER NOT NULL
);

ALTER TABLE ranga ADD CONSTRAINT ranga_pk PRIMARY KEY ( id );

CREATE TABLE uprawnienia_rang (
    ranga_id          INTEGER NOT NULL,
    uprawnienie_nazwa VARCHAR2(126 CHAR) NOT NULL
);

ALTER TABLE uprawnienia_rang ADD CONSTRAINT uprawnienia_rang_pk PRIMARY KEY ( ranga_id,
                                                                    uprawnienie_nazwa );

CREATE TABLE gatunki_filmow (
    film_id    INTEGER NOT NULL,
    gatunek_id INTEGER NOT NULL
);

ALTER TABLE gatunki_filmow ADD CONSTRAINT gatunki_filmow_pk PRIMARY KEY ( film_id,
                                                                  gatunek_id );

CREATE TABLE rola (
    id               INTEGER NOT NULL,
    bohater          VARCHAR2(256 CHAR) NOT NULL,
    opis             CLOB,
    czlowiek_kina_id INTEGER NOT NULL,
    film_id          INTEGER,
    serial_id        INTEGER
);

ALTER TABLE rola
    ADD CONSTRAINT arc_2 CHECK ( ( ( film_id IS NOT NULL )
                                   AND ( serial_id IS NULL ) )
                                 OR ( ( serial_id IS NOT NULL )
                                      AND ( film_id IS NULL ) ) );

ALTER TABLE rola ADD CONSTRAINT rola_pk PRIMARY KEY ( id );

CREATE TABLE serial (
    id               INTEGER NOT NULL,
    tytul_polski     VARCHAR2(512 CHAR),
    tytul_orginalny  VARCHAR2(512 CHAR) NOT NULL,
    opis             CLOB,
    czlowiek_kina_id INTEGER NOT NULL
);

ALTER TABLE serial ADD CONSTRAINT serial_pk PRIMARY KEY ( id );

CREATE TABLE sezon (
    id               INTEGER NOT NULL,
    tytul_polski     VARCHAR2(512 CHAR),
    tytul_oryginalny VARCHAR2(512 CHAR) NOT NULL,
    nr_sezonu        INTEGER NOT NULL,
    opis             CLOB,
    serial_id        INTEGER NOT NULL
);

ALTER TABLE sezon ADD CONSTRAINT sezon_pk PRIMARY KEY ( id );

CREATE TABLE uprawnienie (
    nazwa VARCHAR2(126 CHAR) NOT NULL,
    opis  CLOB
);

ALTER TABLE uprawnienie ADD CONSTRAINT uprawnienie_pk PRIMARY KEY ( nazwa );

CREATE TABLE uzytkownik (
    id             INTEGER NOT NULL,
    nazwa          VARCHAR2(126 CHAR) NOT NULL,
    email          VARCHAR2(256 CHAR) NOT NULL,
    nr_telefonu    VARCHAR2(14 CHAR),
    data_urodzenia DATE
);

ALTER TABLE uzytkownik ADD CONSTRAINT uzytkownik_pk PRIMARY KEY ( id );

ALTER TABLE film
    ADD CONSTRAINT film_czlowiek_kina_fk FOREIGN KEY ( czlowiek_kina_id )
        REFERENCES czlowiek_kina ( id );

ALTER TABLE ocena
    ADD CONSTRAINT ocena_film_fk FOREIGN KEY ( film_id )
        REFERENCES film ( id );

ALTER TABLE ocena
    ADD CONSTRAINT ocena_serial_fk FOREIGN KEY ( serial_id )
        REFERENCES serial ( id );

ALTER TABLE ocena
    ADD CONSTRAINT ocena_uzytkownik_fk FOREIGN KEY ( uzytkownik_id )
        REFERENCES uzytkownik ( id );

ALTER TABLE odcinek
    ADD CONSTRAINT odcinek_sezon_fk FOREIGN KEY ( sezon_id )
        REFERENCES sezon ( id );

ALTER TABLE ranga
    ADD CONSTRAINT ranga_uzytkownik_fk FOREIGN KEY ( uzytkownik_id )
        REFERENCES uzytkownik ( id );

ALTER TABLE uprawnienia_rang
    ADD CONSTRAINT uprawnienia_rang_ranga_fk FOREIGN KEY ( ranga_id )
        REFERENCES ranga ( id );

ALTER TABLE uprawnienia_rang
    ADD CONSTRAINT uprawnienia_rang_uprawnienie_fk FOREIGN KEY ( uprawnienie_nazwa )
        REFERENCES uprawnienie ( nazwa );

ALTER TABLE gatunki_filmow
    ADD CONSTRAINT gatunki_filmow_film_fk FOREIGN KEY ( film_id )
        REFERENCES film ( id );

ALTER TABLE gatunki_filmow
    ADD CONSTRAINT gatunki_filmow_gatunek_fk FOREIGN KEY ( gatunek_id )
        REFERENCES gatunek ( id );

ALTER TABLE rola
    ADD CONSTRAINT rola_czlowiek_kina_fk FOREIGN KEY ( czlowiek_kina_id )
        REFERENCES czlowiek_kina ( id );

ALTER TABLE rola
    ADD CONSTRAINT rola_film_fk FOREIGN KEY ( film_id )
        REFERENCES film ( id );

ALTER TABLE rola
    ADD CONSTRAINT rola_serial_fk FOREIGN KEY ( serial_id )
        REFERENCES serial ( id );

ALTER TABLE serial
    ADD CONSTRAINT serial_czlowiek_kina_fk FOREIGN KEY ( czlowiek_kina_id )
        REFERENCES czlowiek_kina ( id );

ALTER TABLE sezon
    ADD CONSTRAINT sezon_serial_fk FOREIGN KEY ( serial_id )
        REFERENCES serial ( id );

CREATE SEQUENCE czlowiek_kina_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER czlowiek_kina_id_trg BEFORE
    INSERT ON czlowiek_kina
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := czlowiek_kina_id_seq.nextval;
END;
/

CREATE SEQUENCE film_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER film_id_trg BEFORE
    INSERT ON film
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := film_id_seq.nextval;
END;
/

CREATE SEQUENCE odcinek_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER odcinek_id_trg BEFORE
    INSERT ON odcinek
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := odcinek_id_seq.nextval;
END;
/

CREATE SEQUENCE ranga_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ranga_id_trg BEFORE
    INSERT ON ranga
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := ranga_id_seq.nextval;
END;
/

CREATE SEQUENCE rola_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rola_id_trg BEFORE
    INSERT ON rola
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := rola_id_seq.nextval;
END;
/

CREATE SEQUENCE serial_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER serial_id_trg BEFORE
    INSERT ON serial
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := serial_id_seq.nextval;
END;
/

CREATE SEQUENCE sezon_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sezon_id_trg BEFORE
    INSERT ON sezon
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := sezon_id_seq.nextval;
END;
/

CREATE SEQUENCE uzytkownik_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER uzytkownik_id_trg BEFORE
    INSERT ON uzytkownik
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := uzytkownik_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             0
-- ALTER TABLE                             30
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
